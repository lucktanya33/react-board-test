{"version":3,"sources":["components/App/App.js","components/App/index.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","DeleteButton","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageId","MessageTime","MessageBody","Loading","Message","id","author","time","children","deleteTest","onClick","ErrorMessage","App","useState","messages","setMessages","inputValue","setInputValue","messageApiError","setMessageApiError","postMessageError","setPostMessageError","isSubmitting","setIsSubmitting","updateMessages","fetch","then","res","json","data","catch","err","message","useEffect","method","response","console","log","onSubmit","e","preventDefault","headers","body","JSON","stringify","nickname","ok","rows","value","onChange","target","onFocus","toString","map","Date","createdAt","toLocaleString","ReactDOM","render","theme","colors","red_300","red_400","red_500","document","getElementById"],"mappings":"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","file":"static/js/main.e8711912.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments'\n\n// styled components\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`\nconst Title = styled.h1`\n  color: #333;\n`\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`\nconst MessageTextArea = styled.textarea`\n  width: 100%;\n`\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`\n\nconst DeleteButton = styled.button`\n  margin-top: 8px;\n`\nconst MessageList = styled.div`\n  margin-top: 16px;\n`\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  border-radius: 8px;\n  padding: 8px 16px;\n\n  &:not(:first-child) {\n    margin-top: 12px;\n  }\n`\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid lightgrey;\n  padding-bottom: 4px;\n`\nconst MessageAuthor = styled.div`\n  color: black;\n`\n\nconst MessageId = styled.div`\n  color: black;\n`\nconst MessageTime = styled.div``\nconst MessageBody = styled.div``\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nfunction Message({ id, author, time, children, deleteTest }) {\n  return(\n    <MessageContainer>\n      <MessageHead>\n        <MessageId>{id}</MessageId>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n      <DeleteButton onClick={() => deleteTest(id)}>刪除</DeleteButton>\n    </MessageContainer>\n  )\n}\n\nconst ErrorMessage = styled.div`\n  color: red;\n`\n\nfunction App() {\n  // States\n  const [messages, setMessages] = useState([])\n  const [inputValue, setInputValue] = useState()\n  const [messageApiError, setMessageApiError] = useState(null)\n  const [postMessageError, setPostMessageError] = useState(null)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const updateMessages = () => {\n    fetch(API_ENDPOINT)\n    .then(res => res.json())\n    .then((data) => {\n      setMessages(data)\n    })\n    .catch((err) => {\n      setMessageApiError(err.message)\n    })\n  }\n\n  // useEffect\n  // render 完成之後串 API 拿資料\n  useEffect(() => {\n    updateMessages()\n  }, [])\n\n  const handleTextareaChange = e => {\n    setInputValue(e.target.value)\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    // 預防連續點擊-如果已經按下submitting 就return這個function\n    if (isSubmitting) {\n     return \n    }\n    setIsSubmitting(true)\n\n    // 串API-送出留言\n    fetch('https://student-json-api.lidemy.me/comments', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: 'hey',\n        body: inputValue\n      })\n    })\n    .then(res => res.json())\n    .then((data) => {\n      console.log(data)\n      setIsSubmitting(false)\n      if (data.ok === 0) {\n        setIsSubmitting(false)\n        setPostMessageError(data.message)\n        return\n      }\n      updateMessages()\n      setInputValue('')\n    })\n    .catch(err => {\n      setIsSubmitting(false)\n      setPostMessageError(err.message)\n    })\n  }\n\n  const handleTextareaFocus = () => {// onFocus游標移過去textarea框框時要做的事ㄋ\n    setPostMessageError(null)\n  }\n\n  const deleteTest = (id) => {\n    fetch( `https://student-json-api.lidemy.me/comments/${id}`, {\n      method: 'DELETE'\n    })\n    .then(response => response.json())\n    .then(data => updateMessages()) \n    .catch(err => console.log(err)) \n  }\n\n  return (\n    <Page>\n      {isSubmitting && <Loading>正在送出...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n        rows={10}\n        value={inputValue}\n        onChange={handleTextareaChange}\n        onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && (\n      <ErrorMessage>\n        Something went wrong: {messageApiError.toString()}\n      </ErrorMessage>)}\n      <MessageList>\n        {messages.map(message => (\n          <Message\n          key={message.id}\n          id={message.id}\n          author={message.nickname}\n          time={new Date(message.createdAt).toLocaleString()}\n          deleteTest={deleteTest}\n          >\n          {message.body}\n          </Message>\n        ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import App from './App'\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { ThemeProvider} from 'styled-components'\n\nconst theme = {\n  colors: {\n    red_300: \"#ff7979\",\n    red_400: \"#e33e3e\",\n    red_500: \"#af0505\",\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}